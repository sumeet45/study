
let o = [0,1,2,3,4,5,6];

// Array Methods (string and CRUD operations)
// console.log(o.length);  //7
console.log(o.toString());  //[LOG]: "1,2,3,4,5,6,7" 
// console.log(o.at(2));  //2
console.log(o.join(" , "));   //"0 , 1 , 2 , 3 , 4 , 5 , 6"
console.log(o.push(7));   //8 - length of array
console.log(o.pop());   //7

console.log(o.unshift(-1));   //8
console.log(o.shift());   //-1

console.log(o.concat([7, 8, 9]));   //[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
console.log(o.concat([7, 8, 9]).copyWithin(4,0, 2));  //[0, 1, 2, 3, 0, 1, 6, 7, 8, 9] - (target, start, end)

let p = [[1,2], [3,4,6], [88,2,44, 33], [1,3,48]];
console.log(p.flat());   //[1, 2, 3, 4, 6, 88, 2, 44, 33, 1, 3, 48]

console.log(o);   // [0, 1, 2, 3, 4, 5, 6]
console.log(o.splice(4, 2));  //[4, 5]  - ( i, c, items list) - removing
console.log(`ssss`,o.splice(4, 0, 4, 5));  //[0, 1, 2, 3, 6] - adding
console.log(o);   //[0, 1, 2, 3, 4, 5, 6]

console.log(o.slice(1, 4));   //[1, 2, 3]   
// console.log(o.fill(87, 2, 4));    //[0, 1, 87, 87, 4, 5, 6]


// Array search
console.log(o.indexOf(3));    //3
console.log(o.lastIndexOf(2));  //2
console.log(o.includes(2)); //true
console.log(o.find((v, i, a) => v > 3));  //4
console.log([8, 9, 10, 12].findIndex((v, i, a) => v > 3));  //0
// console.log(o.findLast)
// console.log(o.findLastIndex)


// Array Sorts
console.log([22, 5, 13, 59, 29, 85].sort((a, b) => a - b));    //[5, 13, 22, 29, 59, 85]  
console.log([85, 29, 59, 13, 22].sort((a, b) => b - a));      //[85, 59, 29, 22, 13] 
console.log(["Banana", "Orange", "Apple", "Mango"].reverse());    //["Mango", "Apple", "Orange", "Banana"] 
// toSorted()
// toReversed()


// Iteration
console.log(o.forEach((v, i, a) => console.log(v)))     //0, 1, 2, 3, 4, 5, 6
console.log(o.map((v, i, a) => v *2 ));     //[0, 2, 4, 6, 8, 10, 12] 
console.log(o.filter((v, i)=> v > 3));  //[4, 5, 6]
console.log(o.reduce((total, v, i) => total + v )); // 21
console.log(o.every((v, i) => v > 3));  // false
console.log(o.some((v, i)=> v > 3));   // true
