
4) how does an app work?
* mobile is mini computer
* when we tap on screen, sensors in phone registers the tap and sends a message to OS
* now OS will look at data that it gets from the sensor.
* OS will now ask application, to work on given commands
* only 3 components for every single mobile app - screen, code, data
* phone has limited memory and have battery limitation, so we need to keep things in mind while working on app.
* while working on app, we have to work on edge cases like user switch to another app, user getting phone call.


5) How to make an app -
* 

6) How to get All free stuff -

9) How to make the most of the bootcamp -

10) How to Get help When you're stuck -

11) Developing for ios - tools and materials
* macOS 10
* xcode
* physical device
* Apple developer program - we need free apple account (itunes account) to download app on your physical device. Buy Apple developer program, when we ready to deplu on store and ready to generating revenue.
* app store connect - 

13) Getting set up with Xcode -
* xcode need 12 GB hard disk space and simulator need 2 GB. so overall, needed 25 to 30 GB space.
* macOS should be updated

14) Pathfinder -
* 

15) The I am Rich App -
* shows story

16) A note about the next lesson -
* 

17) Lets create a Brand new Xcode project -
* to create new project, we can use 2 options - using file > new > project and through xcode opening modal
* use storyborad in userInterface
* leave team as 'none'-  we need while launching app on physical device.
* product name - "I am Rich"
* Organization Identifier - org website "www.appbrewery.com", so final answer will be - "com.appbrewery" 
* using reverse domain name 'com.appbrewery.I-am-rich' will give unique identifier
* bundle identifier - it should be unique, so we can find app on appstore. it create by xcode itself using given data.
* language - swift
* remember, xcode saves all of code automatically

18) A walkthrough of the xcode development enviorment -
* tabs - General, Signing and Capabilities, Resource Tags, Info, Build Setting, Build Phases, Build Rules
* ios 13.0 - will give minimum level. below 13.0, app won't run on those, only above 13.0 will run.
* told about device orientation
* told about status bar
* xcode segregate in to 4 things - status bar, left pane, right pane, bottom pane (debug area - (view > debug area))
* we mostly work with swift files and storyborad file
* while working with storyboard, we can add elements. Using right pane, we can alter their properties. she told that, she will explain in details once we start using it
* debug area, comes under view > debug area > show debug area
* https://www.appbrewery.co/p/ios-course-resources/
* more shortcuts explained
* preferences and font size and color

19) Let's Design the User Interface -
* we use "main.storyboard" to design page, "launchScreen.storyboard" used for launch screen.
* in the storyboard, we have options in bottom, to change device, so we can check layout with different device.
* "object library" will be available when we click on "+" icon.
* suppose we want to change attributes of text, we have to select first "text" and click on "attributes inspector"
* shows how to set colors using mulitple ways
* shows size inspector working also. and tried 1 example.
* sharing x and y axis details on screen.
* while designing in ios, we take sizes in "points" not in "pixels".

20) Let's incorporate Some image Assets -
* "Assets.xcassets" are those one who have images.
* showing how 1x, 2x and 3x image works. 3x will be sharper and have detailed thing as compared to 1x and 2x.
* "appicon.co" is used for App icon generator.


21) How to design and add an App icon
* we can create icons using "appicon.co"
* we have to add 2x, 3x etc., so whenever we copy and added it to app, app track properly which one is needed now mostly.
* "content.json" is the one who manage this placement of images at exact place.